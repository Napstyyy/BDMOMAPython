"""
Script de r√©organisation du projet selon les bonnes pratiques
Structure claire et professionnelle pour le projet IMT Atlantique
"""

import os
import shutil

def creer_structure_projet():
    """Cr√©er la structure de dossiers selon les bonnes pratiques"""
    
    structure = {
        'docs/': 'Documentation du projet',
        'data/': 'Donn√©es sources et trait√©es',
        'data/raw/': 'Donn√©es brutes (SIG, M√©t√©o France)',
        'data/processed/': 'Donn√©es trait√©es et CSV g√©n√©r√©s',
        'scripts/': 'Scripts Python d\'analyse',
        'web/': 'Interface web et cartes interactives',
        'web/assets/': 'Images et ressources web',
        'web/maps/': 'Cartes interactives HTML',
        'outputs/': 'R√©sultats et visualisations finales',
        'outputs/images/': 'Cartes statiques PNG',
        'outputs/reports/': 'Rapports d\'analyse'
    }
    
    print("üìÅ CR√âATION DE LA STRUCTURE DE PROJET")
    print("="*50)
    
    for dossier, description in structure.items():
        if not os.path.exists(dossier):
            os.makedirs(dossier, exist_ok=True)
            print(f"‚úÖ Cr√©√© : {dossier:<20} - {description}")
        else:
            print(f"‚ÑπÔ∏è  Existe : {dossier:<20} - {description}")
    
    return structure

def organiser_fichiers():
    """Organiser les fichiers existants dans la nouvelle structure"""
    
    print(f"\nüì¶ ORGANISATION DES FICHIERS")
    print("="*50)
    
    # Mappings des fichiers vers leur nouvelle destination
    mappings = {
        # Documentation
        'docs/': [
            'README_FR.md',
            'RESUME_ANALYSE_SIG_FR.md',
            'GUIDE_VISUALISATION_SIG_FR.md',
            'RAPPORT_VERIFICATION_FRANCISATION.md'
        ],
        
        # Scripts Python
        'scripts/': [
            'examiner_attributs_FR.py',
            'visualiser_ameliore_FR.py',
            'creer_cartes_francaises.py',
            'nettoyage_final_FR.py',
            'nettoyer_fichiers_FR.py'
        ],
        
        # Donn√©es trait√©es
        'data/processed/': [
            'resume_Evolution_Cap_Le_Treport_2000-2022.csv',
            'resume_Cellules_Hydrosedimentaires_France.csv'
        ],
        
        # Interface web
        'web/': [
            'index.html'
        ],
        
        # Cartes interactives
        'web/maps/': [
            'carte_interactive_Cap_Le_Treport_FR.html',
            'carte_interactive_Cellules_Hydrosedimentaires_FR.html'
        ],
        
        # Images
        'outputs/images/': [
            'carte_Cap_Le_Treport.png',
            'carte_Cellules_Hydrosedimentaires.png',
            'comparaison_complete_jeux_donnees.png'
        ]
    }
    
    # D√©placer les fichiers
    for destination, fichiers in mappings.items():
        for fichier in fichiers:
            if os.path.exists(fichier):
                try:
                    nouveau_chemin = os.path.join(destination, fichier)
                    shutil.move(fichier, nouveau_chemin)
                    print(f"üìÅ {fichier:<40} ‚Üí {destination}")
                except Exception as e:
                    print(f"‚ùå Erreur d√©placement {fichier}: {e}")
            else:
                print(f"‚ö†Ô∏è  Non trouv√©: {fichier}")
    
    # Cr√©er un lien symbolique pour SIG_data dans data/raw/
    if os.path.exists('SIG_data') and not os.path.exists('data/raw/SIG_data'):
        try:
            if os.name == 'nt':  # Windows
                # Sur Windows, on copie le dossier
                shutil.copytree('SIG_data', 'data/raw/SIG_data')
                print("üìÅ SIG_data copi√© vers data/raw/SIG_data")
            else:
                os.symlink('../../SIG_data', 'data/raw/SIG_data')
                print("üìÅ SIG_data li√© vers data/raw/SIG_data")
        except Exception as e:
            print(f"‚ö†Ô∏è  Impossible de lier SIG_data: {e}")

def creer_readme_principal():
    """Cr√©er un README principal pour le projet organis√©"""
    
    readme_contenu = """# üó∫Ô∏è Projet Analyse G√©ospatiale - IMT Atlantique

## üìã Vue d'Ensemble

Projet de **Commande Entreprise** portant sur l'analyse de l'√©volution c√¥ti√®re en Normandie.
Combine donn√©es d'√©rosion de falaises, cellules hydros√©dimentaires et observations m√©t√©orologiques.

## üèóÔ∏è Structure du Projet

```
üì¶ projet-evolution-cotiere/
‚îú‚îÄ‚îÄ üìÅ docs/                          # Documentation compl√®te
‚îÇ   ‚îú‚îÄ‚îÄ README_FR.md                  # Guide d√©taill√© du projet
‚îÇ   ‚îú‚îÄ‚îÄ RESUME_ANALYSE_SIG_FR.md      # Analyse scientifique
‚îÇ   ‚îú‚îÄ‚îÄ GUIDE_VISUALISATION_SIG_FR.md # Guide technique
‚îÇ   ‚îî‚îÄ‚îÄ RAPPORT_VERIFICATION_FRANCISATION.md
‚îú‚îÄ‚îÄ üìÅ data/                          # Donn√©es du projet
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ raw/                       # Donn√©es sources
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SIG_data/                 # Shapefiles (Cap Le Tr√©port, Cellules Hydro)
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ data_MeteoFrance_.../     # Donn√©es m√©t√©orologiques (1995-2022)
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ processed/                 # Donn√©es trait√©es
‚îÇ       ‚îú‚îÄ‚îÄ resume_Evolution_Cap_Le_Treport_2000-2022.csv
‚îÇ       ‚îî‚îÄ‚îÄ resume_Cellules_Hydrosedimentaires_France.csv
‚îú‚îÄ‚îÄ üìÅ scripts/                       # Scripts d'analyse Python
‚îÇ   ‚îú‚îÄ‚îÄ examiner_attributs_FR.py      # Analyse des attributs
‚îÇ   ‚îú‚îÄ‚îÄ visualiser_ameliore_FR.py     # G√©n√©ration des visualisations
‚îÇ   ‚îú‚îÄ‚îÄ creer_cartes_francaises.py    # Cr√©ation des cartes interactives
‚îÇ   ‚îî‚îÄ‚îÄ nettoyage_final_FR.py         # Scripts de maintenance
‚îú‚îÄ‚îÄ üìÅ web/                           # Interface web
‚îÇ   ‚îú‚îÄ‚îÄ index.html                    # Interface principale
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ maps/                      # Cartes interactives
‚îÇ       ‚îú‚îÄ‚îÄ carte_interactive_Cap_Le_Treport_FR.html
‚îÇ       ‚îî‚îÄ‚îÄ carte_interactive_Cellules_Hydrosedimentaires_FR.html
‚îî‚îÄ‚îÄ üìÅ outputs/                       # R√©sultats finaux
    ‚îî‚îÄ‚îÄ üìÅ images/                    # Cartes statiques
        ‚îú‚îÄ‚îÄ carte_Cap_Le_Treport.png
        ‚îú‚îÄ‚îÄ carte_Cellules_Hydrosedimentaires.png
        ‚îî‚îÄ‚îÄ comparaison_complete_jeux_donnees.png
```

## üöÄ D√©marrage Rapide

### 1. Lancement du serveur web
```powershell
# Se placer dans le dossier web
cd web
python -m http.server 8080
```

### 2. Acc√®s √† l'interface
Ouvrir : **http://localhost:8080/index.html**

### 3. Ex√©cution des analyses
```powershell
# Analyse des donn√©es
python scripts/examiner_attributs_FR.py

# G√©n√©ration des cartes
python scripts/visualiser_ameliore_FR.py
```

## üìä Donn√©es Analys√©es

- **üìç Cap Le Tr√©port (2000-2022)** : 693 √©v√©nements d'√©boulement, 6 cellules de surveillance
- **üåä Cellules Hydros√©dimentaires** : 97 unit√©s de transport s√©dimentaire (France)
- **üå§Ô∏è M√©t√©o France** : Observations horaires Dieppe (1995-2022)

## üõ†Ô∏è Technologies Utilis√©es

- **Python** : geopandas, matplotlib, folium
- **SIG** : Shapefiles, projections Lambert 93 / WGS84
- **Web** : HTML5, CSS3, Leaflet.js
- **Format** : CSV, PNG, HTML interactif

## üéì Contexte Acad√©mique

**Institution** : IMT Atlantique  
**Projet** : Commande Entreprise 2025  
**Domaine** : G√©omorphologie c√¥ti√®re et risques littoraux  
**Zone** : C√¥te de Normandie (France)

---
*Projet enti√®rement francis√© - Septembre 2025*
"""
    
    with open('README.md', 'w', encoding='utf-8') as f:
        f.write(readme_contenu)
    
    print("‚úÖ README.md principal cr√©√©")

def mettre_a_jour_liens():
    """Mettre √† jour les liens dans index.html pour la nouvelle structure"""
    
    index_path = 'web/index.html'
    
    if os.path.exists(index_path):
        with open(index_path, 'r', encoding='utf-8') as f:
            contenu = f.read()
        
        # Mise √† jour des liens
        contenu = contenu.replace('carte_interactive_Cap_Le_Treport_FR.html', 'maps/carte_interactive_Cap_Le_Treport_FR.html')
        contenu = contenu.replace('carte_interactive_Cellules_Hydrosedimentaires_FR.html', 'maps/carte_interactive_Cellules_Hydrosedimentaires_FR.html')
        contenu = contenu.replace('carte_Cap_Le_Treport.png', '../outputs/images/carte_Cap_Le_Treport.png')
        contenu = contenu.replace('carte_Cellules_Hydrosedimentaires.png', '../outputs/images/carte_Cellules_Hydrosedimentaires.png')
        contenu = contenu.replace('comparaison_complete_jeux_donnees.png', '../outputs/images/comparaison_complete_jeux_donnees.png')
        contenu = contenu.replace('resume_Evolution_Cap_Le_Treport_2000-2022.csv', '../data/processed/resume_Evolution_Cap_Le_Treport_2000-2022.csv')
        contenu = contenu.replace('resume_Cellules_Hydrosedimentaires_France.csv', '../data/processed/resume_Cellules_Hydrosedimentaires_France.csv')
        contenu = contenu.replace('README_FR.md', '../docs/README_FR.md')
        contenu = contenu.replace('RESUME_ANALYSE_SIG_FR.md', '../docs/RESUME_ANALYSE_SIG_FR.md')
        contenu = contenu.replace('GUIDE_VISUALISATION_SIG_FR.md', '../docs/GUIDE_VISUALISATION_SIG_FR.md')
        
        with open(index_path, 'w', encoding='utf-8') as f:
            f.write(contenu)
        
        print("‚úÖ Liens mis √† jour dans web/index.html")

def creer_fichier_config():
    """Cr√©er un fichier de configuration pour le projet"""
    
    config_contenu = """# Configuration du Projet - √âvolution C√¥ti√®re Normandie

## Param√®tres des Donn√©es

### Shapefiles
- **Cap Le Tr√©port** : `data/raw/SIG_data/BD_eb_Cap_LeTrep_2000-2022/`
- **Cellules Hydro** : `data/raw/SIG_data/N_cellule_hydrosedimentaire_092020_MEDDE_geolitt/`

### Donn√©es M√©t√©o France
- **Station** : Dieppe (76217001)
- **P√©riode** : 1995-2022
- **Format** : CSV horaire

## Projections Cartographiques

- **Source** : Lambert 93 (EPSG:2154)
- **Web** : WGS84 (EPSG:4326)

## Ports et Configuration

- **Serveur web** : Port 8080
- **URL locale** : http://localhost:8080/

## D√©pendances Python

```
geopandas>=1.1.1
matplotlib>=3.10.6  
folium>=0.20.0
fiona>=1.10.1
pandas>=2.0.0
```

## Structure des Sorties

- **CSV** : `data/processed/`
- **Cartes PNG** : `outputs/images/`
- **Cartes HTML** : `web/maps/`
- **Documentation** : `docs/`
"""
    
    with open('CONFIG.md', 'w', encoding='utf-8') as f:
        f.write(config_contenu)
    
    print("‚úÖ CONFIG.md cr√©√©")

def main():
    """Fonction principale de r√©organisation"""
    
    print("üèóÔ∏è  R√âORGANISATION DU PROJET SELON LES BONNES PRATIQUES")
    print("="*65)
    
    # 1. Cr√©er la structure
    creer_structure_projet()
    
    # 2. Organiser les fichiers
    organiser_fichiers()
    
    # 3. Mettre √† jour les liens
    mettre_a_jour_liens()
    
    # 4. Cr√©er la documentation
    creer_readme_principal()
    creer_fichier_config()
    
    print(f"\nüéâ R√âORGANISATION TERMIN√âE !")
    print("="*50)
    print("üìÅ Structure professionnelle cr√©√©e")
    print("üîó Liens mis √† jour")
    print("üìñ Documentation organis√©e")
    print("‚öôÔ∏è  Configuration d√©finie")
    print(f"\nüåê Pour tester : cd web && python -m http.server 8080")
    print("üåê Puis ouvrir : http://localhost:8080/index.html")

if __name__ == "__main__":
    main()